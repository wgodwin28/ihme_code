// File Name: prepare_data.do

// File Purpose: Prepare water and sanitation data for smoothing
// Author: Leslie Mallinger
// Date: 7/1/10
// Edited on: 

// Additional Comments: 


clear all
macro drop _all
set mem 2G
set more off
capture log close
capture restore, not


** create locals for relevant files and folders
local dat_folder_compiled "J:/Project/COMIND/Water and Sanitation/Data Audit/Data/Compiled"
local codes_folder "J:/Usable/Common Indicators/Country Codes"
local urbrur_folder "J:/Data/UN_WORLD_POPULATION_PROSPECTS/2008"
** local ldi_folder "J:/Usable/IHME Generated"
local ldi_folder "J:/Project/COMIND/GDP/SUBNATIONAL/South Africa"
local education_folder "J:/Usable/Common Indicators"
local input_folder "J:/Project/COMIND/Water and Sanitation/Smoothing/Spacetime Input"
local output_folder "J:/Project/COMIND/Water and Sanitation/Smoothing/Spacetime Results"
local graph_folder "J:/Project/COMIND/Water and Sanitation/Graphs/Smoothing"

local firstyear 1970
local lastyear 2012


** create template dataset with the years that we're using
clear
set obs 43
gen year = .
forvalues i = 1/43 {
	replace year = 1969 + `i' in `i'
}
gen merge = 1
tempfile years
save `years', replace


** ** create database with covariates from codem database
** odbc load, exec("SELECT iso3,year,region,super_region,age,sex,LDI_pc,ln_LDI_pc,education_yrs_pc,pop FROM all_covariates WHERE age BETWEEN 15 AND 45") dsn(codmod) clear
** collapse (mean) LDI_pc ln_LDI_pc education_yrs_pc [weight=pop], by(iso3 year region super_region) fast
** save "J:/Project/COMIND/Water and Sanitation/Smoothing/Spacetime Input/covariates_from_codem.dta", replace


** open dataset with compiled prevalence estimates; remove unnecessary entries and variables
	// open file
	use "`dat_folder_compiled'/prev_all_final.dta", clear
	rename startyear year
	drop if year < `firstyear'
	gen national = (subnational != 1)
	replace national = 0 if nopsu == "1" | noweight == "1"
	drop subnational nopsu noweight
	
	// drop water outliers
	preserve
		insheet using "`input_folder'/outliers_water.csv", comma clear names
		tempfile outliers_water
		save `outliers_water', replace
	restore
	
	merge m:1 countryname year plot national using `outliers_water', keep(1 3)
	
	preserve
		keep if _merge == 3
		drop _merge
		replace plot = "Outlier"
		rename iwater_mean actual_prev
		save "`output_folder'/water_outliers", replace
	restore
	gen outlier_water = (_merge == 3)
	drop _merge
	
	
	// drop sanitation outliers
	preserve
		insheet using "`input_folder'/outliers_sanitation.csv", comma clear names
		tempfile outliers_sanitation
		save `outliers_sanitation', replace
	restore
	
	merge m:1 countryname year plot national using `outliers_sanitation', keep(1 3)
	
	preserve
		keep if _merge == 3
		drop _merge
		replace plot = "Outlier"
		rename isanitation_mean actual_prev
		save "`output_folder'/sanitation_outliers", replace
	restore
	gen outlier_sanitation = (_merge == 3)
	drop _merge
	
	// drop combined outliers
	preserve
		insheet using "`input_folder'/outliers_combined.csv", comma clear names
		tempfile outliers_combined
		save `outliers_combined', replace
	restore
	
	merge m:1 countryname year plot national using `outliers_combined', keep(1 3)
	
	preserve
		keep if _merge == 3
		drop _merge
		replace plot = "Outlier"
		rename icombined_mean actual_prev
		save "`output_folder'/combined_outliers", replace
	restore
	gen outlier_combined = (_merge == 3)
	drop _merge
	
	// save source database for inputs
	preserve
		** mark final sources
		gen water = (iwater_mean != . & outlier_water != 1)
		gen sanitation = (isanitation_mean != . & outlier_sanitation != 1)
		
		** cleanup and save
		compress
		keep countryname iso3 year endyear dattype svytype svy filepath_full source source_long water sanitation
		rename year startyear
		order water sanitation filepath_full countryname iso3 startyear endyear, first
		save "`input_folder'/input_data_sources.dta", replace
		outsheet using "`input_folder'/input_data_sources.csv", comma replace
	restore

	// remove unnecessary variables
	keep countryname iso3 year endyear filename svy iwater_mean iwater_sem iwater_uncertain ///
		isanitation_mean isanitation_sem isanitation_uncertain icombined_mean icombined_sem ///
		plot outlier* national
	
	// save
	tempfile estimates
	save `estimates', replace


** prepare urban/rural data
	// WPP: most countries
		** open file
		insheet using "`urbrur_folder'/UN_WPP_1950_2050_ANNUAL_POPULATION_INDICATORS.csv", clear

		** reduce to relevant variables and observations; calculate desired quantities
		keep if variant == "Medium"
		drop if location == "Micronesia"
		keep location time poptotal popurban
		rename location countryname
		rename time year
		drop if year < `firstyear' | year > `lastyear'
		gen percenturban = popurban/poptotal		
		drop popurban

		** add iso3 to urban/rural data for merging
		preserve
			use "`codes_folder'/countrycodes_official", clear
			drop if countryname == "Burma" & countryname_ihme == "Burma"
			tempfile codes
			save `codes', replace
		restore
		merge m:1 countryname using `codes', keepusing(countryname countryname_ihme ihme_indic_country iso3 gbd_region gbd_developing)
		drop if _merge == 1	// all regions rather than countries
		drop if _merge == 2
		drop if ihme_indic_country == 0
		drop _merge countryname ihme_indic_country
		rename countryname_ihme countryname	
		
		** calculate proportion of population in rural areas in developing countries
		preserve
			keep if year == 2010 & gbd_developing == 1
			collapse (mean) percenturban [weight=poptotal]
			summ percenturban
		restore
		
		** figure out which ihme indicator countries don't have urban/rural data
		preserve
			use "`codes_folder'/countrycodes_official.dta", clear
			keep if countryname == countryname_ihme
			drop if iso3 == ""
			keep if ihme_indic_country == 1
			tempfile codes_indic
			save `codes_indic', replace
		restore
		merge m:1 iso3 using `codes_indic', keepusing(countryname countryname_ihme ihme_indic_country iso3 gbd_region)
		tab countryname if _merge == 2
		
		** pull these countries into their own dataset and expand to have all years
		preserve
			keep if _merge == 2
			drop _merge year
			gen merge = 1
			joinby merge using `years'
			drop merge
			tempfile missings
			save `missings', replace
		restore
		
		** re-attach
		drop if _merge == 2
		drop _merge
		append using `missings'
		
		** calculate average urbanicity by region, apply to countries where we don't have country-specific data
		bysort gbd_region year: egen region_percenturban = mean(percenturban)
		replace percenturban = region_percenturban if percenturban == .
		drop region_percenturban
		
		** save
		tempfile urbrur_wpp
		save `urbrur_wpp', replace	
	
	// ZAF provinces
		** open file 
		insheet using "`input_folder'/ZAF_percent_urban.csv", comma clear
		
		** rearrange
		keep in 6
		destring zaf, replace
		reshape long z, i(v1) j(province) string
		drop v1
		replace province = "z" + province
		replace province = strupper(province)
		rename province iso3
		rename z percenturban
		gen merge = 1
		
		joinby merge using `years'
		drop merge
		drop if iso3 == "ZAF"
		
		gen countryname = iso3
		gen gbd_region = "Sub-Saharan Africa, Southern"
		
		** save
		tempfile urbrur_zaf
		save `urbrur_zaf', replace	
		
	// combine them
	use `urbrur_wpp', clear
	append using `urbrur_zaf'
	replace countryname = countryname_ihme if countryname_ihme != ""
	tempfile urbrur
	save `urbrur', replace
	

** ** prepare lag distributed income data
	** // open file
	** use "`ldi_folder'/LDI_data_with_SA_provinces.dta", clear
	
	** // standardize variables
	** keep iso3 year LDI_id
	** drop if year < `firstyear' | year > `lastyear'
	
	** // reduce to relevant countries
	** preserve
		** use "`codes_folder'/countrycodes_official", clear
		** drop if countryname == "Burma" & countryname_ihme == "Burma"
		** keep if countryname == countryname_ihme
		** drop if iso3 == ""
		** tempfile codesiso3
		** save `codesiso3', replace
	** restore
	** merge m:1 iso3 using `codesiso3', keepusing(countryname countryname_ihme ihme_indic_country gbd_region)
	** keep if _merge == 3 | (_merge == 1 & iso3 != "USSR_FRMR")
	** keep if ihme_indic_country == 1 | countryname == ""
	** replace countryname = iso3 if countryname == ""
	
	** drop _merge ihme_indic_country countryname
	** rename countryname_ihme countryname
	
	** // save
	** tempfile ldi
	** save `ldi', replace
	
	
** prepare education and LDI data
	// open file
	use "`input_folder'/covariates_from_codem.dta", clear
	
	// reduce to relevant countries
	preserve
		use "`codes'", clear
		keep if countryname == countryname_ihme & iso3 != ""
		tempfile codes_iso
		save `codes_iso', replace
	restore
	merge m:1 iso3 using `codes_iso', keepusing(countryname countryname_ihme ihme_indic_country iso3) keep(1 3)
	keep if ihme_indic_country == 1 | _merge == 1
	drop _merge ihme_indic_country countryname
	rename countryname_ihme countryname
	replace countryname = iso3 if countryname == ""
	drop if year < `firstyear' | year > `lastyear'
	keep iso3 year countryname education_yrs_pc	*LDI*
	
	// save
	tempfile education_ldi
	save `education_ldi', replace
	
	
** merge covariates with prevalence estimates
	// percent urban
	use `estimates', clear
	merge m:1 iso3 year using `urbrur', nogenerate
	sort countryname year svy
	
	** // lag distributed income
	** merge m:1 iso3 year using `ldi'
	** tab iso3 if _merge == 1
	** tab iso3 if _merge == 2
	** drop _merge
	
	// education and LDI
	merge m:1 iso3 year using `education_ldi'
	tab iso3 if _merge == 1
		drop if _merge == 1	& year == 2012 // THIS IS REDUCING IT TO 1980-2011
	tab iso3 if _merge == 2
	drop _merge
	
	// GBD regions
	merge m:1 countryname using `codes', keepusing(gbd_region gbd_super_region ihme_indic_country gbd_develop* existence_start links_to*) keep(1 3)
	tab iso3 if _merge == 1
	drop _merge
	

** explore specification options
	// generate possible specifications
	gen iwater_mean_logit = logit(iwater_mean)
	gen isanitation_mean_logit = logit(isanitation_mean)
	gen icombined_mean_logit = logit(icombined_mean)
	gen percenturban_logit = logit(percenturban)
	replace iwater_mean_logit = . if outlier_water == 1
	replace isanitation_mean_logit = . if outlier_sanitation == 1
	replace icombined_mean_logit = . if outlier_combined == 1
	
	
	// save dataset for CodMod covariate calculation
	compress
	save "`input_folder'/input_data_for_covariate", replace

	// drop developing regions
	keep if gbd_developing == 1
	drop gbd_developing
	
	** // drop countries that have split or merged since 1980
	** ** drop if existence_start > 1980 & links_to_parent_2 != .
		** // THIS IS JUST YEMEN -- OKAY TO LEAVE IN
	** capture drop tag
	** duplicates tag links_to_parent_1, gen(tag)
	** drop if existence_start > 1980 & tag > 0 & links_to_parent_1 == 306
		** // KEEP EVERYTHING IN EXCEPT THE STANS -- OTHERWISE IT LOOKS LIKE BIG GAPS
	** drop tag existence_start links_to*
	drop existence_start links_to*
	
	

** clean up and save
compress
save "`input_folder'/input_data_for_thesis", replace

